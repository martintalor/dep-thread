<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iflytek.dep.server.mapper.PackageGlobalStateBeanMapper">
  <resultMap id="BaseResultMap" type="com.iflytek.dep.server.model.PackageGlobalStateBean">
    <id column="PACKAGE_ID" jdbcType="VARCHAR" property="packageId" />
    <id column="TO_NODE_ID" jdbcType="VARCHAR" property="toNodeId" />
    <result column="NODE_ID" jdbcType="VARCHAR" property="nodeId" />
    <result column="GLOBAL_STATE_DM" jdbcType="VARCHAR" property="globalStateDm" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from PACKAGE_GLOBAL_STATE
    where PACKAGE_ID = #{packageId,jdbcType=VARCHAR}
      and TO_NODE_ID = #{toNodeId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.iflytek.dep.server.model.PackageGlobalStateBean">
    insert into PACKAGE_GLOBAL_STATE (PACKAGE_ID, TO_NODE_ID, NODE_ID, 
      GLOBAL_STATE_DM, CREATE_TIME, UPDATE_TIME
      )
    values (#{packageId,jdbcType=VARCHAR}, #{toNodeId,jdbcType=VARCHAR}, #{nodeId,jdbcType=VARCHAR}, 
      #{globalStateDm,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.iflytek.dep.server.model.PackageGlobalStateBean">
    update PACKAGE_GLOBAL_STATE
    set NODE_ID = #{nodeId,jdbcType=VARCHAR},
      GLOBAL_STATE_DM = #{globalStateDm,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where PACKAGE_ID = #{packageId,jdbcType=VARCHAR}
      and TO_NODE_ID = #{toNodeId,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select PACKAGE_ID, TO_NODE_ID, NODE_ID, GLOBAL_STATE_DM, CREATE_TIME, UPDATE_TIME
    from PACKAGE_GLOBAL_STATE
    where PACKAGE_ID = #{packageId,jdbcType=VARCHAR}
      and TO_NODE_ID = #{toNodeId,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select PACKAGE_ID, TO_NODE_ID, NODE_ID, GLOBAL_STATE_DM, CREATE_TIME, UPDATE_TIME
    from PACKAGE_GLOBAL_STATE
  </select>
  <select id="getFailPackageId"  resultType="java.lang.Integer">
    select count(PACKAGE_ID) from PACKAGE_GLOBAL_STATE
    where GLOBAL_STATE_DM = '00'
    and PACKAGE_ID != #{packageId,jdbcType=VARCHAR}
    and PACKAGE_ID like  CONCAT( #{packageId,jdbcType=VARCHAR},'%')
    and rownum = 1
    <if test="toNodeId != null and toNodeId != ''">
      and TO_NODE_ID = #{toNodeId,jdbcType=VARCHAR}
    </if>
  </select>
  <select id="getUnfinishedPackageId" resultType="com.iflytek.dep.server.model.UnfinishedPack">
    select t.PACKAGE_ID as packageId, t2.SERVER_NODE_ID as toServerNodeId
    from PACKAGE_GLOBAL_STATE t
    left join MACHINE_NODE t1 on t.node_id=t1.node_id
    left join MACHINE_NODE t2 on t.to_node_id=t2.node_id
    where t.GLOBAL_STATE_DM in ('00','01')
    and t1.SERVER_NODE_ID = #{serverNodeId,jdbcType=VARCHAR}
    and EXISTS(SELECT 1 FROM DATA_PACKAGE s WHERE s.PACKAGE_ID = t.PACKAGE_ID)
  </select>
  <update id="updateUnfinishedById">
    update PACKAGE_GLOBAL_STATE
    set GLOBAL_STATE_DM = '01'
    where PACKAGE_ID like CONCAT( #{packageId,jdbcType=VARCHAR},'%')
  </update>

  <update id="updateFinishedById">
    update PACKAGE_GLOBAL_STATE
    set GLOBAL_STATE_DM = '02'
    where PACKAGE_ID like CONCAT( #{packageId,jdbcType=VARCHAR},'%')
    and TO_NODE_ID = #{toNodeId,jdbcType=VARCHAR}
  </update>

  <update id="updateExceptionStateById">
    update PACKAGE_GLOBAL_STATE
    set GLOBAL_STATE_DM = '00'
    where PACKAGE_ID = #{packageId,jdbcType=VARCHAR}
  </update>
</mapper>